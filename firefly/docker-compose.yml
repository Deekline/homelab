services:
  firefly_iii:
    image: fireflyiii/core:latest
    container_name: firefly-iii
    environment:
      - APP_ENV=local
      - APP_DEBUG=false
      - DEFAULT_LANGUAGE=en_US
      - DEFAULT_LOCALE=equal
      - TZ=UTC
      - TRUSTED_PROXIES=**
      - LOG_CHANNEL=stack
      - APP_LOG_LEVEL=notice
      - AUDIT_LOG_LEVEL=info
      - DB_HOST=firefly-db
      - DB_PORT=5432
      - DB_CONNECTION=pgsql
      - DB_DATABASE=${FIREFLY_DATABASE_NAME}
      - DB_USERNAME=${FIREFLY_DATABASE_USER}
      - DB_PASSWORD=${FIREFLY_DATABASE_PASSWORD}
      - APP_KEY=${FIREFLY_APP_KEY}
      - REDIS_HOST=firefly-redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - COOKIE_PATH="/"
      - COOKIE_DOMAIN=
      - COOKIE_SECURE=false
      - COOKIE_SAMESITE=lax
      - SEND_ERROR_MESSAGE=true
      - SEND_REPORT_JOURNALS=true
      - ENABLE_EXTERNAL_MAP=false
      - ENABLE_EXTERNAL_RATES=false
      - MAP_DEFAULT_LAT=51.983333
      - MAP_DEFAULT_LONG=5.916667
      - MAP_DEFAULT_ZOOM=6
      - AUTHENTICATION_GUARD=web
      - AUTHENTICATION_GUARD_HEADER=REMOTE_USER
      - AUTHENTICATION_GUARD_EMAIL=
      - DISABLE_FRAME_HEADER=false
      - DISABLE_CSP_HEADER=false
      - ALLOW_WEBHOOKS=false
      - DKR_BUILD_LOCALE=false
      - DKR_CHECK_SQLITE=false
      - DKR_RUN_MIGRATION=true
      - DKR_RUN_UPGRADE=true
      - DKR_RUN_VERIFY=true
      - DKR_RUN_REPORT=true
      - DKR_RUN_PASSPORT_INSTALL=true
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    networks:
      - firefly
      - homelab
    depends_on:
      firefly-db:
        condition: service_healthy
      firefly-redis:
        condition: service_started
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.firefly.entrypoints=websecure"
      - "traefik.http.routers.firefly.rule=Host(`firefly.${DOMAIN_NAME}`)"
      - "traefik.http.routers.firefly.tls=true"
      - "traefik.http.routers.firefly.tls.certresolver=cloudflare"
      - "traefik.http.routers.firefly.service=firefly"
      - "traefik.http.routers.firefly.middlewares=local-only@file,authentik@file,security-headers@file"
      - "traefik.http.services.firefly.loadbalancer.server.port=8080"

  firefly-db:
    image: postgres:17-alpine
    container_name: firefly-db
    environment:
      - POSTGRES_PASSWORD=${FIREFLY_DATABASE_PASSWORD}
      - POSTGRES_USER=${FIREFLY_DATABASE_USER}
      - POSTGRES_DB=${FIREFLY_DATABASE_NAME}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    networks:
      - firefly
    volumes:
      - ./db:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER"]
      interval: 2s
      start_period: 30s

  firefly-redis:
    image: redis:7-alpine
    container_name: firefly-redis
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - firefly
    volumes:
      - ./redis:/data
    restart: unless-stopped

  firefly-cron:
    image: alpine:latest
    container_name: firefly-cron
    command: sh -c "echo '0 3 * * * wget -qO- http://firefly_iii:8080/api/v1/cron/${STATIC_CRON_TOKEN}' | crontab - && crond -f"
    environment:
      - STATIC_CRON_TOKEN=${STATIC_CRON_TOKEN}
    networks:
      - firefly
    depends_on:
      - firefly_iii
    restart: unless-stopped

volumes:
  firefly_iii_upload:

networks:
  firefly:
    name: firefly
  homelab:
    name: homelab
    external: true